stages:
  - build
  - test
  - deploy

variables:
  BDD_IMAGE_TAG: $CI_REGISTRY_IMAGE/bdd_tests

#bdd_docker_build:
#  stage: build
#  image: docker:latest
#  services:
#    - docker:dind
#  script:
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker build -t $BDD_IMAGE_TAG docker/ubuntu-firefox/
#    - docker push $BDD_IMAGE_TAG

quality:
  image: python:3.6
  stage: test
  before_script:
    - pip install -r requirements_quality.txt
  script:
    - flake8
  allow_failure: true

bdd_tests:
  image: $BDD_IMAGE_TAG
  stage: test
  script:
    - pip3 install -r requirements.txt
    - pip3 install -r requirements_test.txt
#    - scrapy check
    - cd house_finder && python3 manage.py behave --settings=house_finder.settings.local

.deploy_setup: &deploy_before_scripts
  before_script:
    - mkdir ~/.ssh
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - touch ~/.ssh/known_hosts
    - echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts
    - cd deploy_tools
    - echo ${ANSIBLE_VAULT_SECRET} > .vault_password.txt
    - pip install ansible

deploy_staging:
  image: ansible/ansible:default
  stage: deploy
  <<: *deploy_before_scripts
  script:
    - ansible-playbook playbook.yml -i hosts/staging/inventory --vault-password-file .vault_password.txt
  environment:
    name: Staging
    url: https://houses-staging.ariasmonche.es
  only:
  - develop

deploy_live:
  image: ansible/ansible:default
  stage: deploy
  <<: *deploy_before_scripts
  script:
    - ansible-playbook playbook.yml -i hosts/live/inventory --vault-password-file .vault_password.txt
  environment:
    name: Live
    url: https://houses.ariasmonche.es
  only:
  - master