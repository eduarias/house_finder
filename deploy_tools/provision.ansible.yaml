---

- hosts: all

  vars:
      host: "{{ inventory_hostname }}"

  tasks:

    - name: Install python deploy environment
      apt:
        name:
         - git
         - python3
         - python3-venv
         - python3-dev
         - nginx
        state: present
      tags:
        - provision

     # MySQL
    - name: Install mySQL
      apt:
        name:
          - mysql-server-5.7
          - python-mysqldb
        state: present

    - name: Generate new root password
      command: openssl rand -hex 7 creates=/root/.my.cnf
      register: mysql_new_root_pass

    - name: Remove anonymous users
      mysql_user: name="" state=absent
      when: mysql_new_root_pass.changed

    - name: Remove test database
      mysql_db: name=test state=absent
      when: mysql_new_root_pass.changed

    - name: Output new root password
      debug: msg="New root password is {{mysql_new_root_pass.stdout}}"
      when: mysql_new_root_pass.changed

    - name: Update root password
      mysql_user: name=root host={{item}} password={{mysql_new_root_pass.stdout}}
      with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost
      when: mysql_new_root_pass.changed

    - name: Create my. cnf
      template: src=templates/mysql/my.cnf.j2 dest=/root/.my.cnf
      when: mysql_new_root_pass.changed

##
    - name: Create Django MySQL database
      mysql_db: name=wordpress state=present

    - name: Create Django MySQL user
      mysql_user: name=django host=localhost password=bananas priv=django.*:ALL

######################
    - name: Make sure required packages are installed
      apt:
        name:
          - libxml2-dev
          - libxslt1-dev
          - zlib1g-dev
          - libffi-dev
          - libssl-dev
        state: present
      tags:
        - provision

    - name: Allow long hostnames in nginx
      lineinfile:
        dest=/etc/nginx/nginx.conf
        regexp='(\s+)#? ?server_names_hash_bucket_size'
        backrefs=yes
        line='\1server_names_hash_bucket_size 64;'
      tags:
        - provision

    - name: Add nginx config to sites-available
      template: src=./templates/nginx.conf.j2 dest=/etc/nginx/sites-available/{{ host }}
      notify:
          - restart nginx
      tags:
        - provision

    - name: Add symlink in nginx sites-enabled
      file:
          src=/etc/nginx/sites-available/{{ host }}
          dest=/etc/nginx/sites-enabled/{{ host }}
          state=link
      notify:
          - restart nginx
      tags:
        - provision

    - name: Write gunicorn service script
      template:
          src=./templates/gunicorn.service.j2
          dest=/etc/systemd/system/gunicorn-{{ host }}.service
      notify:
          - restart gunicorn
      tags:
        - provision

    - name: Create directory structure if necessary
      file:
        path: /home/eduarias/sites/{{ host }}/{{ item }}
        state: directory
        owner: eduarias
        group: eduarias
      with_items:
        - virtualenv
        - source
      tags:
        - deploy

    - name: Get house crawler from git
      git:
        repo: git@gitlab.com:eduarias/home_crawler.git
        dest: /home/eduarias/sites/{{ host }}/source
        version: "{{ version }}"
        key_file: /home/eduarias/.ssh/id_rsa
        accept_hostkey: yes
        force: yes
      notify:
        - restart gunicorn
      tags:
        - deploy

    - name: Update settings, debug
      lineinfile:
        path: /home/eduarias/sites/{{ host }}/source/house_finder/house_finder/settings.py
        regexp: '^DEBUG ='
        line: 'DEBUG = False'
      tags:
        - deploy

    - name: Update settings, allowed hosts
      lineinfile:
        path: /home/eduarias/sites/{{ host }}/source/house_finder/house_finder/settings.py
        regexp: '^ALLOWED_HOSTS ='
        line: 'ALLOWED_HOSTS = ["{{ host }}"]'
      tags:
        - deploy

#    - name: Update settings, secret key
#      lineinfile:
#        path: /home/eduarias/sites/{{ host }}/source/home_crawler/house_finder/house_finder/settings.py
#        regexp: '^SECRET_KEY ='
#        line: 'ALLOWED_HOSTS = ['{{ host }}']'
#      tags:
#        - deploy

    - name: Install virtualenv
      pip:
        name: virtualenv
        executable: pip3
      tags:
        - deploy

    - name: Create virtualenv and install pip requirements
      pip:
        requirements: /home/eduarias/sites/{{ host }}/source/requirements.txt
        virtualenv: /home/eduarias/sites/{{ host }}/virtualenv
        virtualenv_python: python3
      tags:
        - deploy

    - name: Update database
      django_manage:
        command: migrate
        app_path: /home/eduarias/sites/{{ host }}/source/house_finder
        virtualenv: /home/eduarias/sites/{{ host }}/virtualenv
      tags:
        - deploy

    - name: Cron scrapy job
      cron:
        name: "scrapy"
        minute: "0"
        hour: "3,15"
        job: "/home/eduarias/sites/{{ host }}/virtualenv/bin/python /home/eduarias/sites/{{ host }}/source/home_crawler.py"
      when: "'live' in group_names"
      tags:
        - deploy

handlers:
    - name: restart nginx
      service:  name=nginx state=restarted
      tags:
        - deploy
        - restart
        - provision

    - name: restart gunicorn
      systemd:
          name=gunicorn-{{ host }}
          daemon_reload=yes
          enabled=yes
          state=restarted
      tags:
        - deploy
        - restart
        - provision